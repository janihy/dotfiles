[alias]
  # View abbreviated SHA, description, and history graph of the latest 20 commits
  l = log --pretty=oneline -n 20 --graph --abbrev-commit

  # View the current working tree status using the short format
  s = status -s

  # Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

  # `git di $number` shows the diff between the state `$number` revisions ago and the current state
  di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

  # Pull in remote changes for the current repository and all its submodules
  p = pull --recurse-submodules

  # Clone a repository including all submodules
  c = clone --recursive

  # Commit all changes
  ca = !git add -A && git commit -av

  # Switch to a branch, creating it if necessary
  go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v

  # List aliases
  aliases = config --get-regexp alias

  # Show the user email for the current repository.
  whoami = config user.email

  # Unstage stuff
  unstage = restore --staged

  # Create a MR to Gitlab
  pushmr = "!f() { git push -u origin -o merge_request.create -o merge_request.remove_source_branch -o merge_request.target=development -o merge_request.title=\"$1\"; }; f"

[help]
  autocorrect = 1

[fetch]
  prune = true

[include]
  path = ~/.gitconfig.local

[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22

[color "diff"]
  meta = yellow
  frag = magenta bold
  commit = yellow bold
  old = red bold
  new = green bold
  whitespace = red reverse

[core]
  pager = diff-so-fancy | less --tabs=4 -RFX
  excludesfile = ~/.gitignore

[push]
  default = current

[pull]
  ff = only
[init]
	defaultBranch = master
