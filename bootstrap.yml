
- name: Configure everything
  hosts: localhost
  vars:
    kitty_root: "{{ ansible_env.HOME }}/.local/kitty.app"
    local_bin: "{{ ansible_env.HOME }}/.local/bin"
    tmp_folder: "{{ ansible_env.HOME }}/tmp"
  remote_user: jani

  tasks:
  - name: Gather package facts
    package_facts:
      manager: apt

  - name: Add Sublime HQ apt key
    become: true
    ansible.builtin.get_url:
      url: https://download.sublimetext.com/sublimehq-pub.gpg
      dest: /etc/apt/keyrings/sublime-text.asc
  - name: Add Sublime HQ apt repository
    become: true
    ansible.builtin.apt_repository:
      repo: deb [signed-by=/etc/apt/keyrings/sublime-text.asc] https://download.sublimetext.com/ apt/stable/
      state: present
      filename: sublime-text

  - name: Add Keybase apt key
    become: true
    ansible.builtin.get_url:
      url: https://keybase.io/docs/server_security/code_signing_key.asc
      dest: /etc/apt/keyrings/keybase.asc
  - name: Add Keybase apt repository
    become: true
    ansible.builtin.apt_repository:
      repo: deb [signed-by=/etc/apt/keyrings/keybase.asc] http://prerelease.keybase.io/deb stable main
      state: present
      filename: keybase
  - name: Touch /etc/default/keybase to avoid automatic repo configuration # see https://keybase.io/docs/the_app/install_linux
    become: true
    ansible.builtin.file:
      path: /etc/default/keybase
      state: touch
    when: '"keybase" not in ansible_facts.packages'

  - name: Add Wire apt key
    become: true
    ansible.builtin.get_url:
      url: https://wire-app.wire.com/linux/releases.key
      dest: /etc/apt/keyrings/wire.asc
  - name: Add Wire apt repository
    ansible.builtin.apt_repository:
      repo: deb [signed-by=/etc/apt/keyrings/wire.asc] https://wire-app.wire.com/linux/debian stable main
      state: present
      filename: wire-desktop

  - name: Install packages with apt
    become: true
    ansible.builtin.apt:
      name:
        - apt-transport-https
        - bat
        - binwalk
        - blueman
        - build-essential
        - command-not-found
        - curl
        - direnv
        - dnsutils
        - exiftool
        - firefox-esr
        - fonts-font-awesome
        - fonts-noto
        - fonts-noto-color-emoji
        - fwupd
        - fzf
        - gimp
        - git
        - gnupg2
        - google-chrome-stable
        - grim
        - hexyl
        - httpie
        - jid
        - jq
        - kanshi
        - keybase
        - kitty-terminfo
        - libpam-u2f
        - lightdm
        - logiops
        - mate-polkit
        - materia-gtk-theme
        - mesa-utils
        - meson
        - neofetch
        - network-manager-gnome
        - ninja-build
        - nodejs
        - playerctl
        - psmisc
        - python3
        - python3-pip
        - python3-venv
        - qalc
        - ranger
        - ripgrep
        - scdoc
        - slurp
        - ssh-audit
        - sshfs
        - sublime-merge
        - sublime-text
        - sway
        - sway-notification-center
        - swaybg
        - swayidle
        - taskwarrior
        - thefuck
        - thunar
        - thunar-archive-plugin
        - tshark
        - vagrant
        - vim
        - virt-manager
        - waybar
        - wdisplays
        - wireshark
        - wl-clipboard
        - wofi
        - zsh
      state: present
      update_cache: true

  - name: Install packages from pip
    ansible.builtin.pip:
      break_system_packages: true
      name:
        - ansible
        - rofimoji
      state: latest
    become: false # only break user packages, not system-wide 😏
    when: ansible_version.full is version('2.17', '>=') # you may need to update ansible first manually-ish

  - name: Make zsh the default shell
    user:
      name: "{{ ansible_user }}"
      shell: "/usr/bin/zsh"

  - name: Install antidote (clone git repo to ~)
    ansible.builtin.git:
      repo: 'https://github.com/mattmc3/antidote.git'
      depth: 1
      dest: "{{ ansible_env.HOME }}/.antidote"

  - name: Fetch the latest version of Kitty
    set_fact:
      kitty_latest: "{{ lookup('url', 'https://sw.kovidgoyal.net/kitty/current-version.txt') }}"
  - name: Ask local Kitty version
    ansible.builtin.command: "{{ kitty_root }}/bin/kitty --version"
    register: kitty_installed_version
  - name: Set the current Kitty version to a variable
    ansible.builtin.set_fact:
      kitty_installed: "{{ kitty_installed_version.stdout.split(' ')[1] | trim | string }}"
  - name: Install latest Kitty
    block:
      - name: Download Kitty tarball
        ansible.builtin.get_url:
          url: "https://github.com/kovidgoyal/kitty/releases/download/v{{ kitty_latest }}/kitty-{{ kitty_latest }}-x86_64.txz"
          dest: "{{ tmp_folder }}/kitty-{{ kitty_latest }}-x86_64.txz"
          mode: "0640"
      - name: Extract Kitty
        ansible.builtin.unarchive:
          src: "{{ tmp_folder }}/kitty-{{ kitty_latest }}-x86_64.txz"
          dest: "{{ kitty_root }}"
          remote_src: true
    when:
      - kitty_installed != kitty_latest
  - name: Kitty symlink in place
    ansible.builtin.file:
      state: link
      src: "{{ kitty_root }}/bin/kitty"
      dest: "{{ local_bin }}/kitty"
      mode: "0777"

  - name: Kitten symlink in place
    ansible.builtin.file:
      state: link
      src: "{{ kitty_root }}/bin/kitten"
      dest: "{{ local_bin }}/kitten"
      mode: "0777"
