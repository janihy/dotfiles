[global]
# dunst configuration reference at
# https://dunst-project.org/documentation/

# show notifications on the monitor where mouse is
follow = mouse

# sort messages by urgency
sort = yes

# don't remove messages if the user has been away for x seconds
idle_threshold = 120

# show how many messages are currently hidden (because of geometry)
indicate_hidden = yes

# where to put the notifications and how
geometry = "300x5-30+20"
transparency = 20
notification_height = 40
frame_width = 1
frame_color = "#aaaaaa"

separator_height = 2
separator_color = auto

# (vertical) padding between text and separator or frame
padding = 8
horizontal_padding = 8

### Text ###

alignment = left
vertical_alignment = center
word_wrap = yes
ignore_newline = no

font = Noto Sans 9
markup = full
# possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %I  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
#   %n  progress value if set without any extra characters
#   %%  Literal %
format = "<b>%s</b>\n%b"

# show age of message if message is older than show_age_threshold
show_age_threshold = 60

# stack duplicates
stack_duplicates = true
# and show how many are hidden
hide_duplicate_count = false

# do not display indicators for URLs (U) and actions (A).
show_indicators = no

### Icons ###
icon_position = right

min_icon_size = 0
max_icon_size = 32

icon_path = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/

### History ###

# Should a notification popped up from history be sticky or timeout
# as if it would normally do.
sticky_history = yes

# Maximum amount of notifications kept in history
history_length = 100

### Misc/Advanced ###
startup_notification = true

### Mouse

# Defines list of actions for each mouse event
# Possible values are:
# * none: Don't do anything.
# * do_action: If the notification has exactly one action, or one is marked as default,
#              invoke it. If there are multiple and no default, open the context menu.
# * close_current: Close current notification.
# * close_all: Close all notifications.
# These values can be strung together for each mouse event, and
# will be executed in sequence.
mouse_left_click = close_current
mouse_middle_click = do_action, close_current
mouse_right_click = close_all

[shortcuts]
# close notification from anywhere with ctrl+space
close = ctrl+space

[urgency_low]
background = "#222222"
foreground = "#888888"
timeout = 6

[urgency_normal]
background = "#222222"
foreground = "#ffffff"
timeout = 10

[urgency_critical]
background = "#900000"
foreground = "#ffffff"
frame_color = "#ff0000"
timeout = 0
